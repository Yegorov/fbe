(award
  (explain "When a code contribution is made, the author receives a bonus")
  (in hoc "the total number of hits-of-code in the contribution")
  (in comments "the total number of comments made by all reviewers")
  (in reviews "the number of reviews provided")

  (aka
    (let basis {{ 8 | times: love }})
    (give basis "as a basis")
    "award ${basis} points")

  (aka
    (let hoc_k {{ 0.025 | times: love }})
    (let hoc_threshold {{ 400 | divided_by: paranoia }})
    (let hoc_max 16)
    (let hoc_min 5)
    (set bonus_for_hoc (if (lt hoc hoc_threshold) (times hoc hoc_k) 0))
    (set bonus_for_hoc (between bonus_for_hoc hoc_min hoc_max))
    (give bonus_for_hoc "for the ${hoc} hits-of-code that you wrote")
    "add ${hoc_k} points for each [hit-of-code](https://www.yegor256.com/2014/11/14/hits-of-code.html), but not more than ${hoc_max} points")

  (aka
    (let many_hoc_fee {{ 4 | times: anger }})
    (set penalty_for_hoc (if (gte hoc hoc_threshold) (times -1 many_hoc_fee) 0))
    (give penalty_for_hoc "for too many hits-of-code (${hoc} >= ${hoc_threshold})")
    "deduct ${many_hoc_fee} points if more than ${hoc_threshold} [hits-of-code](https://www.yegor256.com/2014/11/14/hits-of-code.html)")

  (aka
    (let many_hoc_fee2 {{ 8 | times: anger }})
    (let hoc_threshold2 {{ 1600 | divided_by: paranoia }})
    (set penalty_for_hoc2 (if (gte hoc hoc_threshold2) (times -1 many_hoc_fee2) 0))
    (give penalty_for_hoc2 "for way too many hits-of-code (${hoc} >= ${hoc_threshold2})")
    "deduct ${many_hoc_fee2} points if more than ${hoc_threshold2} [hits-of-code](https://www.yegor256.com/2014/11/14/hits-of-code.html)")

  (aka
    (let no_review_fee {{ 8 | times: anger }})
    (set penalty_for_no_review (if (eq reviews 0) (times -1 no_review_fee) 0))
    (give penalty_for_no_review "for the lack of code review")
    "deduct ${no_review_fee} points if there were no code review")

  (aka
    (let comments_k {{ 0.1 | times: anger }})
    (let comments_max -16)
    (let comments_min -4)
    (let comments_threshold {{ 16 | divided_by: paranoia }})
    (set bonus_for_comments
      (if
        (gt comments comments_threshold)
        (times comments (times -1 comments_k))
        0
      )
    )
    (set bonus_for_comments (between bonus_for_comments comments_min comments_max))
    (give bonus_for_comments "for too many (${comments} > ${comments_threshold}) comments that were made during review")
    "deduct ${comments_k} points for every comment above ${comments_threshold} made during review, but not more than ${comments_max} points")

  (aka
    (let few_hoc_fee {{ 4 | times: anger }})
    (let hoc_needed {{ 10 | times: paranoia }})
    (set penalty_for_few_hoc (if (lt hoc hoc_needed) (times -1 few_hoc_fee) 0))
    (give penalty_for_few_hoc "for too few (${hoc}) hits-of-code")
    "deduct ${few_hoc_fee} points if you contribute less than ${hoc_needed} hits-of-code")

  (aka
    (let max 24)
    (set over (if (gt (total) max) (minus max (total)) 0))
    (give over "to not go over the cap")
    (let min 4)
    (set least (if (lt (total) min) (minus min (total)) 0))
    (give least "to give you at least something")
    "make sure the reward is not larger than ${max} points and not smaller than ${min} points")
  )
